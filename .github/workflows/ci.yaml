name: Crosscheck-CI
on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - master

jobs:
  analyze:
    name: Run flutter analyze
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Create Android Emulator
        run: |
          echo $HOME
          ls -lah $ANDROID_HOME
          ls -lah $ANDROID_HOME/cmdline-tools
          ls -lah $ANDROID_HOME/cmdline-tools/latest
          ls -lah $ANDROID_HOME/cmdline-tools/latest/bin
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update --channel=0
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "system-images;android-29;default;x86"
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager --verbose create avd --force --name "generic_10" --package "system-images;android-29;default;x86" --tag "default" --abi "x86"
          echo "skin.name=768x1280" >> ~/.android/avd/generic_10.avd/config.ini
          echo "hw.lcd.density=480" >> ~/.android/avd/generic_10.avd/config.ini
          echo "hw.keyboard=yes" >> ~/.android/avd/generic_10.avd/config.ini
          $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager list avd
          echo "Starting emulator"
          $ANDROID_HOME/emulator/emulator -avd generic_10 -no-window -no-audio -debug-init > /dev/null 2>&1 &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Android Emulator started"
      - name: Create iOS Simulator
        run: |
          sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
          sudo ln -s /Applications/Xcode_12.4.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 15.2.simruntime
          xcrun simctl list runtimes
          UDID=$(xcrun simctl create "iPhone X" "com.apple.CoreSimulator.SimDeviceType.iPhone-X" "com.apple.CoreSimulator.SimRuntime.iOS-15-2")
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
          echo "IOS Simulator Started"
          # xcrun simctl list devices
      - name: Flutter List devices
        run: | 
          flutter devices
          
          
  # test:
  #   name: Run flutter test
  #   needs: [analyze]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-java@v2
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"
  #     - run: flutter pub get
  #     - run: flutter test

  # build_ios:
  #   name: Build iOS
  #   needs: [test]
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-java@v2
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"
  #     - run: flutter pub get
  #     - run: flutter clean
  #     - run: flutter build ios

  # build_android:
  #   name: Build Android
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-java@v2
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: "stable"
  #     - run: flutter pub get
  #     - run: flutter clean
  #     - run: flutter build apk