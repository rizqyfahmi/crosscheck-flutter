// Mocks generated by Mockito 5.2.0 from annotations
// in crosscheck/test/features/dashboard/presentation/bloc/dashboard_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:crosscheck/core/error/failure.dart' as _i8;
import 'package:crosscheck/core/param/param.dart' as _i10;
import 'package:crosscheck/features/authentication/domain/repositories/authentication_repository.dart'
    as _i3;
import 'package:crosscheck/features/dashboard/domain/entities/dashboard_entity.dart'
    as _i9;
import 'package:crosscheck/features/dashboard/domain/repositories/dashboard_repository.dart'
    as _i2;
import 'package:crosscheck/features/dashboard/domain/usecases/get_dashboard_usecase.dart'
    as _i6;
import 'package:crosscheck/features/profile/domain/repositories/profile_repository.dart'
    as _i4;
import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDashboardRepository_0 extends _i1.Fake
    implements _i2.DashboardRepository {}

class _FakeAuthenticationRepository_1 extends _i1.Fake
    implements _i3.AuthenticationRepository {}

class _FakeProfileRepository_2 extends _i1.Fake
    implements _i4.ProfileRepository {}

class _FakeEither_3<L, R> extends _i1.Fake implements _i5.Either<L, R> {}

/// A class which mocks [GetDashboardUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetDashboardUsecase extends _i1.Mock
    implements _i6.GetDashboardUsecase {
  MockGetDashboardUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DashboardRepository get repository => (super.noSuchMethod(
      Invocation.getter(#repository),
      returnValue: _FakeDashboardRepository_0()) as _i2.DashboardRepository);
  @override
  _i3.AuthenticationRepository get authenticationRepository =>
      (super.noSuchMethod(Invocation.getter(#authenticationRepository),
              returnValue: _FakeAuthenticationRepository_1())
          as _i3.AuthenticationRepository);
  @override
  _i4.ProfileRepository get profileRepository =>
      (super.noSuchMethod(Invocation.getter(#profileRepository),
          returnValue: _FakeProfileRepository_2()) as _i4.ProfileRepository);
  @override
  _i7.Future<_i5.Either<_i8.Failure, _i9.DashboardEntity>> call(
          _i10.NoParam? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i5.Either<_i8.Failure, _i9.DashboardEntity>>.value(
                      _FakeEither_3<_i8.Failure, _i9.DashboardEntity>()))
          as _i7.Future<_i5.Either<_i8.Failure, _i9.DashboardEntity>>);
}
